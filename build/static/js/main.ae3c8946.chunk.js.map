{"version":3,"sources":["Components/Header.jsx","Storage/index.js","Components/Composer.jsx","Components/Todo.jsx","Components/TodoList.jsx","Components/ArchivedTodos.jsx","Components/CompletedTodos.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","header","backgroundImage","height","display","flexDirection","justifyContent","padding","spacing","backgroundSize","backgroundPosition","backgroundRepeat","color","Header","classes","hours","days","months","Box","className","Typography","variant","hour","Date","getHours","i","length","formatGreet","date","getDay","getDate","getMonth","formatDate","db","Dexie","a","title","description","important","dueDate","todos","add","completed","id","status","update","archive","archived","delete","version","stores","card","border","action","actionsButtons","boxShadow","button","borderRadius","margin","chip","marginBottom","Composer","useState","open","setOpen","isPickerShown","setPickerShown","openEditor","setOpenEditor","isImportant","setImportant","selectedDate","handleDateChange","setTitle","setDescription","clearFields","handleSnackbar","Card","CardContent","element","FormControl","fullWidth","TextField","size","label","placeholder","value","onChange","e","target","multiline","rows","utils","DateFnsUtils","DateTimePicker","onClose","inputVariant","disablePast","classList","pickerField","clearable","Paper","elevation","Chip","icon","onDelete","formatDistance","addSuffix","CardActions","IconButton","onClick","Checkbox","checkedIcon","checked","Button","disabled","addTodo","then","Snackbar","event","reason","autoHideDuration","message","severity","Divider","background","lightGreen","textDecoration","item","paddingBottom","fakeItem","paddingTop","fontSize","marginRight","actions","tinyIcon","alignItems","lineHeight","rawDescription","fontFamily","fontWeight","Todo","todo","setChecked","expanded","setExpanded","useEffect","handleClick","markAsCompleted","clsx","ListItem","ListItemIcon","ClickAwayListener","onClickAway","ListItemText","primary","secondary","component","archiveItem","deleteItem","paper","TodoList","allTodos","useLiveQuery","reverse","toArray","activeTodos","filter","map","details","inner","width","accordion","ArchivedTodos","archivedTodos","Accordion","AccordionSummary","expandIcon","AccordionDetails","CompletedTodos","completedTodos","container","SignIn","Container","maxWidth","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae3c8946.chunk.js","sourcesContent":["import {Box, Typography} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nconst useStyles = makeStyles(theme => ({\n  header: {\n    backgroundImage: `url('/gradient.jpg')`,\n    height: '30vh',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(2),\n    backgroundSize: 'cover',\n    backgroundPosition: 'center center',\n    backgroundRepeat: 'no-repeat',\n    color: '#ffffff'\n  }\n}))\nconst Header = () => {\n  const classes = useStyles()\n  const hours = [\n    [0, 4, \"Good Night\"],\n    [5, 11, \"Good Morning\"],\n    [12, 17, \"Good Afternoon\"],\n    [18, 24, \"Good Night\"]\n  ]\n  const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September','October', 'November', 'December']\n  const formatGreet = () => {\n    const hour = new Date().getHours()\n    for(var i = 0; i < hours.length; i++) {\n      if (hour >= hours[i][0] && hour <= hours[i][1]) {\n        return hours[i][2]\n      }\n    }\n  }\n  const formatDate = () => {\n    const date = new Date()\n    return `${days[date.getDay()]} ${date.getDate()} ${months[date.getMonth()]}`\n  } \n  return (\n    <Box className={classes.header}>\n      <Typography variant=\"h3\">{formatGreet()}</Typography>\n      <Typography variant=\"h5\">{formatDate()}</Typography>\n    </Box>\n  )\n}\n\nexport default Header\n","import Dexie from 'dexie'\nconst dbName = 'To-Do'\n\nexport const db = new Dexie(dbName)\n\ndb.version(1.2).stores(\n  { todos: '++id, title, description, completed, archived, important, dueDate, date' }\n)\n\nexport async function addTodo({ title, description, important, dueDate }) {\n  await db.todos.add({\n    title: title,\n    description: description,\n    completed: false,\n    important: important,\n    dueDate: dueDate,\n    date: new Date()\n  })\n}\n\nexport async function markAsCompleted(id, status) {\n  await db.todos.update(id, {completed: status})\n}\n\nexport async function archiveItem(id, archive) {\n  await db.todos.update(id, {archived: archive})\n}\n\nexport async function deleteItem(id) {\n  await db.todos.delete(id)\n}\n","import {Divider, Card, Chip, CardActions, CardContent, CardHeader} from '@material-ui/core'\nimport {Avatar, Paper, IconButton, Button, Typography, Snackbar} from '@material-ui/core'\nimport {FormControl, TextField, Checkbox} from '@material-ui/core'\n\nimport DateFnsUtils from '@date-io/date-fns'\nimport {formatDistance, subDays} from 'date-fns'\nimport {DateTimePicker, MuiPickersUtilsProvider} from '@material-ui/pickers'\n\nimport Add from '@material-ui/icons/Add'\nimport Event from '@material-ui/icons/Event'\nimport Error from '@material-ui/icons/Error'\nimport ErrorOutline from '@material-ui/icons/ErrorOutline'\nimport Edit from '@material-ui/icons/Edit'\n\nimport {makeStyles} from '@material-ui/core/styles'\n\nimport {useEffect, useState} from  'react'\n\nimport {addTodo} from '../Storage'\nimport useTimeAgo from '../Hooks/useTimeAgo'\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    border: 'none'\n  },\n  action: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  actionsButtons: {\n    boxShadow: 'none'\n  },\n  button: {\n    borderRadius: 6\n  },\n  margin: {\n    margin: theme.spacing(0.5, 0)\n  },\n  chip: {\n    margin: theme.spacing(0.5)\n  },\n  title: {\n    marginBottom: theme.spacing(1)\n  }\n}))\nconst Composer = () => {\n  const [open, setOpen] = useState(false)\n  const [isPickerShown, setPickerShown] = useState(false)\n  const [openEditor, setOpenEditor] = useState(false)\n  const [isImportant, setImportant] = useState(false)\n  const [selectedDate, handleDateChange] = useState(null)\n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n  const classes = useStyles()\n  const handleDescription = e =>  {\n    const {value} = e.target\n    setDescription(value)\n  }\n  const handleTitle = e =>  {\n    const {value} = e.target\n    setTitle(value)\n  }\n  const saveTodo = () => {\n    if (!title) return\n    const item = {\n      title: title,\n      description: description,\n      important: isImportant,\n      dueDate: selectedDate\n    }\n    addTodo(item)\n    .then(clearFields())\n  }\n  const clearFields = () => {\n    setTitle('')\n    setDescription('')\n    handleDateChange(null)\n    setImportant(false)\n    setPickerShown(false)\n    setOpenEditor(false)\n    handleSnackbar()\n  }\n  const handleSnackbar = () => {\n    setOpen(true)\n  }\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === 'clickaway') return\n    setOpen(false)\n  }\n  const toggleEditor = () => {\n    setOpenEditor(!openEditor)\n  }\n  const clearDueDate = () => handleDateChange(null)\n  const clearImportant = () => setImportant(false)\n  const hidePicker = () => setPickerShown(false)\n  const togglePicker = () => setPickerShown(!isPickerShown)\n  const toggleImportant = () => setImportant(!isImportant)\n  return (\n    <Card variant=\"outlined\" className={classes.card}>\n      <CardContent>\n        <Typography element=\"h4\" variant=\"h6\" className={classes.title}>\n          Enter a new task\n        </Typography>\n        <FormControl fullWidth className={classes.margin}>\n          <TextField\n            size=\"small\"\n            label=\"Task title\"\n            variant=\"outlined\"\n            placeholder=\"Buy new fruits\"\n            value={title}\n            onChange={handleTitle}\n          />\n        </FormControl>\n        {\n          openEditor &&\n          <FormControl fullWidth className={classes.margin}>\n            <TextField\n              label=\"Decription\"\n              multiline\n              variant=\"outlined\"\n              placeholder=\"Apples, Mangos and Bananas\"\n              rows={2}\n              onChange={handleDescription}\n              value={description}\n            />\n          </FormControl>\n        }\n        {\n          isPickerShown &&\n          <MuiPickersUtilsProvider utils={DateFnsUtils} className={classes.margin}>\n            <DateTimePicker\n              onClose={hidePicker}\n              fullWidth\n              value={selectedDate}\n              onChange={handleDateChange}\n              placeholder=\"Select a due date\"\n              label=\"Due date\"\n              inputVariant=\"outlined\"\n              disablePast\n              variant=\"inline\"\n              classList={classes.pickerField}\n              clearable\n            />\n          </MuiPickersUtilsProvider>\n        }\n        <Paper className={classes.margin} elevation={0}>\n          {\n            selectedDate &&\n            <Chip\n              icon={<Event />}\n              className={classes.chip}\n              onDelete={clearDueDate}\n              label={formatDistance(selectedDate, new Date(), { addSuffix: true })}\n            />\n          }\n          {\n            isImportant &&\n            <Chip\n              label=\"Important\"\n              color=\"secondary\"\n              onDelete={clearImportant}\n            />\n          }\n        </Paper>\n      </CardContent>\n      {\n        title &&\n        <CardActions className={classes.action}>\n          <Paper className={classes.actionsButtons}>\n            <IconButton\n              color={isPickerShown ? 'primary' : '' || selectedDate ? 'primary' : ''}\n              onClick={togglePicker}\n            >\n              <Event />\n            </IconButton>\n            <IconButton\n              color={openEditor ? 'primary' : '' || description ? 'primary' : ''}\n              onClick={toggleEditor}\n              variant={openEditor ? 'contained' : ''}\n            ><Edit /></IconButton>\n            <Checkbox\n              icon={<ErrorOutline />}\n              checkedIcon={<Error />}\n              checked={isImportant}\n              onChange={toggleImportant}\n            />\n          </Paper>\n          <Button\n            className={classes.button}\n            color=\"primary\"\n            disabled={!title}\n            onClick={saveTodo}\n          >Save</Button>\n        </CardActions>\n      }\n      <Snackbar open={open} onClose={handleCloseSnackbar} autoHideDuration={3000} message=\"Task created!\" severity=\"success\" />\n      <Divider />\n    </Card>\n  )\n}\n\nexport default Composer\n","import {useState, useEffect, useRef} from 'react'\n\n// List\nimport {\n  ListItem,\n  ListItemIcon,\n  ListItemText\n} from '@material-ui/core'\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  CardActionArea,\n  Avatar\n} from '@material-ui/core'\n\n// Pieces\nimport {\n  ClickAwayListener,\n  Divider,\n  Chip,\n  Checkbox,\n  Button,\n  IconButton\n} from '@material-ui/core'\n\n// Icons\nimport Event from '@material-ui/icons/Event'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport ArchiveIcon from '@material-ui/icons/Archive'\nimport UnarchiveIcon from '@material-ui/icons/Unarchive'\nimport EditIcon from '@material-ui/icons/Edit'\nimport DoneIcon from '@material-ui/icons/Done'\nimport NewReleasesIcon from '@material-ui/icons/NewReleases'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked'\n\n\n// Utils\nimport {markAsCompleted, archiveItem, deleteItem} from '../Storage'\nimport {makeStyles} from '@material-ui/core/styles'\nimport {lightGreen} from '@material-ui/core/colors'\nimport {Typography} from '@material-ui/core'\nimport {formatDistance, subDays} from 'date-fns'\nimport clsx from 'clsx'\n\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    border: 'none',\n    borderRadius: 0\n  },\n  completed: {\n    background: lightGreen[100],\n    textDecoration: 'line-through'\n  },\n  archived: {\n    background: '#f5f5f5',\n    color: '#777'\n  },\n  item: {\n    paddingBottom: 0\n  },\n  fakeItem: {\n    paddingTop: 0\n  },\n  chip: {\n    borderRadius: 3,\n    fontSize: '.7rem',\n    marginRight: theme.spacing(.5)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  tinyIcon: {\n    fontSize: '1rem',\n    margin: theme.spacing(0, .3)\n  },\n  description: {\n    display: 'flex',\n    alignItems: 'center',\n    lineHeight: 1.5\n  },\n  rawDescription: {\n    fontFamily: 'inherit',\n    fontSize: 'inherit',\n    color: 'inherit',\n    fontWeight: 'inherit'\n  }\n}))\n\nconst Todo = ({todo}) => {\n  const classes = useStyles()\n  const {id, title, description, completed, important, archived, dueDate, date} = todo\n  const [checked, setChecked] = useState(false)\n  const [expanded, setExpanded] = useState(false)\n\n  useEffect(() => {\n    setChecked(completed)\n  })\n\n  const handleClick = () => {\n    markAsCompleted(id, !completed)\n  }\n  const toggleArchived = () => {\n    archiveItem(id, !archived)\n  }\n  const removeItem = () => {\n    deleteItem(id)\n  }\n  const toggleExpanded = () => {\n    setExpanded(!expanded)\n  }\n  const handleClickAway = () => {\n    setExpanded(false)\n  }\n  return (\n    <Card\n      className={\n        clsx(\n          classes.card,\n          completed && classes.completed,\n          archived && classes.archived\n        )\n      }\n      variant=\"outlined\"\n    >\n      <ListItem className={classes.item}>\n        <ListItemIcon>\n          <Checkbox\n            disabled={archived}\n            onClick={handleClick}\n            checked={checked}\n            onChange={handleClick}\n            icon={<RadioButtonUncheckedIcon />}\n            checkedIcon={<CheckCircleIcon />}\n          />\n        </ListItemIcon>\n        <ClickAwayListener onClickAway={handleClickAway}>\n          <ListItemText\n            primary={title}\n            onClick={toggleExpanded}\n            secondary={\n              <>\n                <Typography component=\"span\" variant=\"subtitle2\" className={classes.description}>\n                  {\n                    !expanded &&\n                    <>{description}</>\n                  }\n                  {\n                    important &&\n                    <NewReleasesIcon className={classes.tinyIcon} />\n                  }\n                  {\n                    dueDate &&\n                    <Event className={classes.tinyIcon} />\n                  }\n                </Typography>\n              </>\n            }\n          />\n        </ClickAwayListener>\n      </ListItem>\n      {\n        expanded &&\n        <CardContent>\n          <Typography component=\"pre\" variant=\"subtitle2\">{description}</Typography>\n        </CardContent>\n      }\n      {\n        expanded &&\n        <CardActions className={classes.actions}>\n          {\n            dueDate &&\n            <Chip\n              size=\"small\"\n              color=\"primary\"\n              variant=\"outlined\"\n              className={classes.chip}\n              icon={<Event />}\n              label={formatDistance(dueDate, new Date(), { addSuffix: true })}\n            />\n          }\n          {\n            important &&\n            <Chip\n              size=\"small\"\n              variant=\"outlined\"\n              className={classes.chip}\n              color=\"secondary\"\n              icon={<NewReleasesIcon />}\n              label=\"Important\"\n            />\n          }\n          {\n            !completed &&\n            <IconButton size=\"small\" color={archived ? 'primary' : ''} onClick={toggleArchived}>\n              {\n                archived\n                ? <UnarchiveIcon />\n                : <ArchiveIcon />\n              }\n            </IconButton>\n          }\n          <IconButton size=\"small\" onClick={removeItem}>\n            <DeleteIcon />\n          </IconButton>\n        </CardActions>\n      }\n      <Divider />\n    </Card>\n  )\n}\n\nexport default Todo\n","import {Paper, Typography} from '@material-ui/core'\n\nimport {makeStyles} from '@material-ui/core/styles'\nimport Todo from './Todo'\nimport {db} from '../Storage'\nimport {useLiveQuery} from 'dexie-react-hooks'\n\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(2, 0)\n  },\n  paper: {\n    border: 'none',\n    margin: 0\n  }\n}))\n\nconst TodoList = () => {\n  const classes = useStyles()\n  const allTodos = useLiveQuery(\n    () => db.todos.reverse().toArray()\n  )\n  if (!allTodos) return null\n  const activeTodos = allTodos.filter(todo => !todo.completed && !todo.archived)\n  return (\n    <>\n      {\n        activeTodos.map(todo => (\n          <Todo todo={todo} id={todo.id} />\n        ))\n      }\n    </>\n  )\n}\n\nexport default TodoList\n","import {\n  Chip,\n  Paper,\n  Typography,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails\n} from '@material-ui/core'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport {makeStyles} from '@material-ui/core/styles'\nimport Todo from './Todo'\nimport {db} from '../Storage'\nimport {useLiveQuery} from 'dexie-react-hooks'\nimport {useState} from 'react'\n\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(2, 0)\n  },\n  paper: {\n    margin: theme.spacing(2, 0)\n  },\n  details: {\n    padding: 0\n  },\n  inner: {\n    width: '100%',\n    padding: theme.spacing(0),\n    boxShadow: 'none'\n  },\n  accordion: {\n    border: 'none'\n  }\n}))\n\nconst ArchivedTodos = () => {\n  const classes = useStyles()\n\n  const [expanded, setExpanded] = useState(false)\n\n  const allTodos = useLiveQuery(() => db.todos.reverse().toArray())\n  if (!allTodos) return null\n\n  const archivedTodos = allTodos.filter(todo => todo.archived)\n  if (!archivedTodos.length) return null\n\n  const toggleExpanded = () => {\n    setExpanded(!expanded)\n  }\n  return (\n    <Accordion expanded={expanded} variant=\"outlined\" className={classes.accordion}>\n      <AccordionSummary\n        onClick={toggleExpanded}\n        expandIcon={<ExpandMore />}\n      >\n        <Typography variant=\"h6\">\n          Archived items <Chip label={archivedTodos.length} />\n        </Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.details}>\n        <Paper className={classes.inner}>\n          {\n            archivedTodos.map(todo => (\n              <Todo todo={todo} id={todo.id} />\n            ))\n          }\n        </Paper>\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n\nexport default ArchivedTodos\n","import {\n  Chip,\n  Paper,\n  Typography,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails\n} from '@material-ui/core'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport {makeStyles} from '@material-ui/core/styles'\nimport Todo from './Todo'\nimport {db} from '../Storage'\nimport {useLiveQuery} from 'dexie-react-hooks'\nimport {useState} from 'react'\n\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(2, 0)\n  },\n  paper: {\n    margin: theme.spacing(2, 0)\n  },\n  details: {\n    padding: 0\n  },\n  inner: {\n    width: '100%',\n    padding: theme.spacing(0),\n    boxShadow: 'none'\n  },\n  accordion: {\n    border: 'none'\n  }\n}))\n\nconst CompletedTodos = () => {\n  const classes = useStyles()\n\n  const [expanded, setExpanded] = useState(false)\n\n  const allTodos = useLiveQuery(() => db.todos.reverse().toArray())\n  if (!allTodos) return null\n\n  const completedTodos = allTodos.filter(todo => todo.completed)\n  if (!completedTodos.length) return null\n\n  const toggleExpanded = () => {\n    setExpanded(!expanded)\n  }\n  return (\n    <Accordion expanded={expanded} variant=\"outlined\" className={classes.accordion}>\n      <AccordionSummary\n        onClick={toggleExpanded}\n        expandIcon={<ExpandMore />}\n      >\n        <Typography variant=\"h6\">\n          Completed items <Chip label={completedTodos.length} />\n        </Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.details}>\n        <Paper className={classes.inner}>\n          {\n            completedTodos.map(todo => (\n              <Todo todo={todo} id={todo.id} />\n            ))\n          }\n        </Paper>\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n\nexport default CompletedTodos\n","import {Container, Typography} from '@material-ui/core'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport Header from './Components/Header.jsx'\nimport Composer from './Components/Composer.jsx'\nimport TodoList from './Components/TodoList.jsx'\nimport ArchivedTodos from './Components/ArchivedTodos.jsx'\nimport CompletedTodos from './Components/CompletedTodos.jsx'\n\nconst useStyles = makeStyles((theme) => ({\n  padding: {\n    padding: theme.spacing(2)\n  },\n  container: {\n    padding: 0\n  }\n}))\n\nexport default function SignIn() {\n  const classes = useStyles()\n  return (\n    <Container maxWidth=\"sm\" className={classes.container}>\n      <CssBaseline />\n      <Header />\n      <Composer />\n      <TodoList />\n      <CompletedTodos />\n      <ArchivedTodos />\n    </Container>\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}